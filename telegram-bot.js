const TelegramBot = require('node-telegram-bot-api')
const dotenv = require('dotenv')

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config({ path: '.env.local' })

// –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω –∏–∑ .env.local
const token = process.env.TELEGRAM_BOT_TOKEN || 'YOUR_BOT_TOKEN'
const bot = new TelegramBot(token, { polling: true })

console.log('Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω...')

const autoRepliedUsers = new Set()

const activeChats = new Map() // chatId -> {name, lastMessage}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
bot.onText(/\/start (.+)/, (msg, match) => {
	const chatId = msg.chat.id
	const startParam = match[1]
	const userName = msg.from.first_name || '–ö–ª–∏–µ–Ω—Ç'

	console.log(`–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º: ${startParam}`)

	if (startParam === 'greeting_heating_service') {
		bot.sendMessage(
			chatId,
			`–î–æ–±—Ä—ã–π –¥–µ–Ω—å, ${userName}! –ö–∞–∫–∏–µ —É—Å–ª—É–≥–∏ –æ—Ç–æ–ø–ª–µ–Ω–∏—è —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å?\n\nüî• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ—Ç–ª–æ–≤\nüè† –ú–æ–Ω—Ç–∞–∂ —Ç–µ–ø–ª—ã—Ö –ø–æ–ª–æ–≤\nüîß –†–µ–º–æ–Ω—Ç –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ\nüìû –ê–≤–∞—Ä–∏–π–Ω—ã–π –≤—ã–∑–æ–≤\n\n–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –∑–∞–¥–∞—á—É, –∏ —è —Å–≤—è–∂—É –≤–∞—Å —Å –º–∞—Å—Ç–µ—Ä–æ–º!`
		)
	} else {
		bot.sendMessage(chatId, `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${userName}! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?`)
	}
})

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start$/, msg => {
	const chatId = msg.chat.id
	const userName = msg.from.first_name || '–ö–ª–∏–µ–Ω—Ç'

	console.log('–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤')

	bot.sendMessage(
		chatId,
		`–î–æ–±—Ä—ã–π –¥–µ–Ω—å, ${userName}! –ö–∞–∫–∏–µ —É—Å–ª—É–≥–∏ –æ—Ç–æ–ø–ª–µ–Ω–∏—è —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å?\n\nüî• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ—Ç–ª–æ–≤\nüè† –ú–æ–Ω—Ç–∞–∂ —Ç–µ–ø–ª—ã—Ö –ø–æ–ª–æ–≤\nüîß –†–µ–º–æ–Ω—Ç –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ\nüìû –ê–≤–∞—Ä–∏–π–Ω—ã–π –≤—ã–∑–æ–≤\n\n–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –∑–∞–¥–∞—á—É, –∏ —è —Å–≤—è–∂—É –≤–∞—Å —Å –º–∞—Å—Ç–µ—Ä–æ–º!`
	)
})

bot.onText(/\/reset/, msg => {
	const yourChatId = process.env.TELEGRAM_CHAT_ID
	if (msg.chat.id.toString() === yourChatId) {
		autoRepliedUsers.clear()
		bot.sendMessage(
			msg.chat.id,
			'‚úÖ –°–ø–∏—Å–æ–∫ –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç–æ–≤ —Å–±—Ä–æ—à–µ–Ω. –ë–æ—Ç —Å–Ω–æ–≤–∞ –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–æ–≤—ã–º –∫–ª–∏–µ–Ω—Ç–∞–º.'
		)
	}
})

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', msg => {
	const chatId = msg.chat.id
	const messageText = msg.text
	const yourChatId = process.env.TELEGRAM_CHAT_ID
	const userName = msg.from.first_name || '–ö–ª–∏–µ–Ω—Ç'

	// –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –≤–ª–∞–¥–µ–ª—å—Ü–∞ - –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—ã –æ—Ç–≤–µ—Ç–∞
	if (chatId.toString() === yourChatId && messageText) {
		// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –∫–ª–∏–µ–Ω—Ç—É: /reply 123456789 –í–∞—à –æ—Ç–≤–µ—Ç
		const replyMatch = messageText.match(/^\/reply (\d+) (.+)/)
		if (replyMatch) {
			const targetChatId = replyMatch[1]
			const replyText = replyMatch[2]

			bot
				.sendMessage(targetChatId, replyText)
				.then(() => {
					bot.sendMessage(
						yourChatId,
						`‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∫–ª–∏–µ–Ω—Ç—É ${
							activeChats.get(targetChatId)?.name || targetChatId
						}`
					)
				})
				.catch(error => {
					bot.sendMessage(yourChatId, `‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: ${error.message}`)
				})
			return
		}

		// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤
		if (messageText === '/chats') {
			if (activeChats.size === 0) {
				bot.sendMessage(yourChatId, 'üì≠ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏')
			} else {
				let chatsList = 'üë• –ê–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã:\n\n'
				activeChats.forEach((info, chatId) => {
					chatsList += `üë§ ${info.name}\nüÜî ${chatId}\nüí¨ "${info.lastMessage}"\n\n`
				})
				chatsList += 'üí° –î–ª—è –æ—Ç–≤–µ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /reply CHAT_ID –≤–∞—à_–æ—Ç–≤–µ—Ç'
				bot.sendMessage(yourChatId, chatsList)
			}
			return
		}
	}

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤
	if (
		messageText &&
		!messageText.startsWith('/start') &&
		!messageText.startsWith('/reset') &&
		chatId.toString() !== yourChatId
	) {
		console.log(`–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: ${messageText}`)

		activeChats.set(chatId, {
			name: userName,
			lastMessage:
				messageText.length > 50
					? messageText.substring(0, 50) + '...'
					: messageText,
		})

		// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤–∞–º –æ –Ω–æ–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
		if (yourChatId) {
			bot.sendMessage(
				yourChatId,
				`üì© –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞:\n\nüë§ ${userName}\nüí¨ ${messageText}\n\nüÜî Chat ID: ${chatId}\n\nüí° –û—Ç–≤–µ—Ç–∏—Ç—å: /reply ${chatId} –≤–∞—à_–æ—Ç–≤–µ—Ç`
			)
		}

		if (!autoRepliedUsers.has(chatId)) {
			bot.sendMessage(
				chatId,
				'–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! –ú–∞—Å—Ç–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. üë®‚Äçüîß'
			)
			autoRepliedUsers.add(chatId)
			console.log(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç –∫–ª–∏–µ–Ω—Ç—É ${chatId}`)
		} else {
			console.log(`–ê–≤—Ç–æ–æ—Ç–≤–µ—Ç —É–∂–µ –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∫–ª–∏–µ–Ω—Ç—É ${chatId}, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`)
		}
	}
})

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.on('error', error => {
	console.log('–û—à–∏–±–∫–∞ –±–æ—Ç–∞:', error)
})
